package priv.ivrdsl;

/*Generated by IVR DSL */

import org.dom4j.DocumentException;
import priv.ivrdsl.model.EventBean;
import priv.ivrdsl.model.GlobalVariableBean;
import priv.ivrdsl.impl.QueryCaseImpl;
import priv.ivrdsl.service.EventLogic;
import priv.ivrdsl.util.VoiceOutputUtils;
import priv.ivrdsl.view.Init;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

public class VoiceMenu implements ActionListener {


    public static VoiceMenu instance;

    public static void initHashMap() {
        EventBean Action_0_xlo8kt = new EventBean("Home", "China-Mobile", "0");
        Action_0_xlo8kt.setAction("", true);

        Action_0_xlo8kt.setAdditions("欢迎致电申国移动");

        GlobalVariableBean.event2TriggerMap.put("0", Action_0_xlo8kt);

        EventBean Action_01_xlo8kt = new EventBean("Action_01", "转接服务", "1");
        GlobalVariableBean.event2TriggerMap.put("01", Action_01_xlo8kt);
        Action_01_xlo8kt.setAction("call", true);
        Action_01_xlo8kt.setAdditions("分号123");
        Action_0_xlo8kt.addChild(Action_01_xlo8kt);

        EventBean Action_02_xlo8kt = new EventBean("Action_02", "信息业务", "2");
        GlobalVariableBean.event2TriggerMap.put("02", Action_02_xlo8kt);
        Action_02_xlo8kt.setAction("info", true);
        Action_02_xlo8kt.setAdditions("tbDataPlan");
        Action_0_xlo8kt.addChild(Action_02_xlo8kt);

        EventBean Action_00_xlo8kt = new EventBean("Action_00", "投诉", "0");
        GlobalVariableBean.event2TriggerMap.put("00", Action_00_xlo8kt);
        Action_00_xlo8kt.setAction("menu", false);
        Action_00_xlo8kt.setAdditions("");
        Action_0_xlo8kt.addChild(Action_00_xlo8kt);

        EventBean Action_009_xlo8kt = new EventBean("Action_009", "返回上级菜单", "9");
        GlobalVariableBean.event2TriggerMap.put("009", Action_009_xlo8kt);
        Action_009_xlo8kt.setAction("back", false);
        Action_009_xlo8kt.setAdditions("");
        Action_00_xlo8kt.addChild(Action_009_xlo8kt);

        EventBean Action_000_xlo8kt = new EventBean("Action_000", "投诉", "0");
        GlobalVariableBean.event2TriggerMap.put("000", Action_000_xlo8kt);
        Action_000_xlo8kt.setAction("menu", false);
        Action_000_xlo8kt.setAdditions("");
        Action_00_xlo8kt.addChild(Action_000_xlo8kt);

        EventBean Action_0009_xlo8kt = new EventBean("Action_0009", "返回上级菜单", "9");
        GlobalVariableBean.event2TriggerMap.put("0009", Action_0009_xlo8kt);
        Action_0009_xlo8kt.setAction("back", false);
        Action_0009_xlo8kt.setAdditions("");
        Action_000_xlo8kt.addChild(Action_0009_xlo8kt);

        EventBean Action_0000_xlo8kt = new EventBean("Action_0000", "结束通话", "0");
        GlobalVariableBean.event2TriggerMap.put("0000", Action_0000_xlo8kt);
        Action_0000_xlo8kt.setAction("hangup", true);
        Action_0000_xlo8kt.setAdditions("");
        Action_000_xlo8kt.addChild(Action_0000_xlo8kt);

        EventBean Action_00a_xlo8kt = new EventBean("Action_00a", "测试星号按键", "*");
        GlobalVariableBean.event2TriggerMap.put("00*", Action_00a_xlo8kt);
        Action_00a_xlo8kt.setAction("call", true);
        Action_00a_xlo8kt.setAdditions("");
        Action_00_xlo8kt.addChild(Action_00a_xlo8kt);

        EventBean Action_00b_xlo8kt = new EventBean("Action_00b", "测试井号按键", "#");
        GlobalVariableBean.event2TriggerMap.put("00#", Action_00b_xlo8kt);
        Action_00b_xlo8kt.setAction("hangup", true);
        Action_00b_xlo8kt.setAdditions("");
        Action_00_xlo8kt.addChild(Action_00b_xlo8kt);

    }

    public static void main(String[] args) {
        initHashMap();
        instance = new VoiceMenu();
        VoiceMenu.initHashMap();
        Init.initView(instance);
        EventLogic.runInitSetup();
    }

    @Override
    public void actionPerformed(ActionEvent event) {
        boolean isValidVariable = !(((GlobalVariableBean.curTriggerPath == null || GlobalVariableBean.curTriggerPath.length() == 0) || GlobalVariableBean.hasFinished || !GlobalVariableBean.hasStarted));
        if (isValidVariable) {
            try {
                try {
                    if (VoiceOutputUtils.waitingThr.isAlive()) {
                        VoiceOutputUtils.waitingThr.interrupt();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                EventLogic.runLogic(event, queryCase);
            } catch (IOException | InterruptedException | DocumentException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * {@code QueryCaseImpl} 为返回 {@code String} 类型的接口。
     * <p>
     * 重载此接口，如调用第三方库的方法，以获取数据库查询语句的查询条件，如用户电话号码。
     * <p>
     * 返回字符串格式为 SQL {@code select} 语法中的 {@code where} 部分，例如 {@code return "where mobile = 18987654321"}。
     *
     * @see QueryCaseImpl
     * @see priv.ivrdsl.util.SqlQueryUtils#query
     */
    QueryCaseImpl queryCase = () -> {
        return "";
        // TODO: Override this method before executing!
    };

}

